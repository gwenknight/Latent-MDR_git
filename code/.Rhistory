lines(seq(1:steps),X$inc[1,], col = "blue")
} else {plot (seq(1:steps),X$inc[1,],type = "l", col ="red")
lines(seq(1:steps),X$inc[2,], col = "blue")}
# prev change
if(max(X$prev[2,]) > max(X$prev[1,])){
plot (seq(1:steps),X$prev[2,],type = "l", col ="red")
lines(seq(1:steps),X$prev[1,], col = "blue")
} else {plot (seq(1:steps),X$prev[1,],type = "l", col ="red")
lines(seq(1:steps),X$prev[2,], col = "blue")}
# ratio resistance in previously treated vs. new
plot (seq(1:steps),X$ratio_mdr,type = "l")
# proportion change
p_summ_row <- summ_row
for(ii in 1:length(X$psize)){p_summ_row[,ii]<-p_summ_row[,ii]/X$psize[ii]}
m_p_summ_row<-melt(p_summ_row,id.vars = "pop")
ggplot(m_p_summ_row,aes(x = variable, y = value,fill=pop)) + geom_bar(stat="identity")
# age distribution
mAS <- as.data.frame(X$AS)
colnames(mAS)<-seq(1:Mnage);
mAS$time <- seq(1:steps)
mAS$population <- "AS"
m_mAS <- melt(mAS,id.vars = c("time","population"))
mAR <- as.data.frame(X$AR)
colnames(mAR)<-seq(1:Mnage);
mAR$time <- seq(1:steps)
mAR$population <- "AR"
m_mAR <- melt(mAR,id.vars = c("time","population"))
m_pyr <- rbind(m_mAR,m_mAS)
m_pyr1<-m_pyr[which(m_pyr$time == 2),]
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(subset = .(population = "AS"), stat = "identity") +
geom_bar(subset = .(population = "AR"), stat = "identity") +
coord_flip() +
scale_fill_brewer(palette = "Set1")
scale_y_continuous(breaks = seq(-15000000, 15000000, 5000000),
labels = paste0(as.character(c(seq(15, 0, -5), seq(5, 15, 5))), "m")) +
coord_flip() +
scale_fill_brewer(palette = "Set1") +
theme_bw()
X$ratio_mdr
p_summ_row <- summ_row
for(ii in 1:length(X$psize)){p_summ_row[,ii]<-p_summ_row[,ii]/X$psize[ii]}
m_p_summ_row<-melt(p_summ_row,id.vars = "pop")
ggplot(m_p_summ_row,aes(x = variable, y = value,fill=pop)) + geom_bar(stat="identity")
mAS <- as.data.frame(X$AS)
colnames(mAS)<-seq(1:Mnage);
mAS$time <- seq(1:steps)
mAS$population <- "AS"
m_mAS <- melt(mAS,id.vars = c("time","population"))
mAR <- as.data.frame(X$AR)
colnames(mAR)<-seq(1:Mnage);
mAR$time <- seq(1:steps)
mAR$population <- "AR"
m_mAR <- melt(mAR,id.vars = c("time","population"))
m_pyr <- rbind(m_mAR,m_mAS)
m_pyr1<-m_pyr[which(m_pyr$time == 2),]
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(subset = .(population = "AS"), stat = "identity") +
geom_bar(subset = .(population = "AR"), stat = "identity") +
coord_flip() +
scale_fill_brewer(palette = "Set1")
head(m_pyr1)
ggplot(m_pyr1, aes(x = variable, y = value, fill = population))
tail(m_pyr1)
library(plyr)
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(subset = .(population = "AS"), stat = "identity") +
geom_bar(subset = .(population = "AR"), stat = "identity") +
coord_flip() +
scale_fill_brewer(palette = "Set1")
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(subset = .(population = "AS"), stat = "identity")
m_mAR$value <- -m_mAR$value # flip for axis
m_pyr <- rbind(m_mAR,m_mAS)
m_pyr1<-m_pyr[which(m_pyr$time == 2),]
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(subset = .(population = "AS"), stat = "identity") +
geom_bar(subset = .(population = "AR"), stat = "identity") +
coord_flip() +
scale_fill_brewer(palette = "Set1")
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(subset = .(population = "AR"), stat = "identity") +
geom_bar(subset = .(population = "AR"), stat = "identity") +
coord_flip() +
scale_fill_brewer(palette = "Set1")
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(stat = "identity")
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(subset = (m_pyr1,population = "AS"), stat = "identity") +
geom_bar(subset = (m_pyr1,population = "AR"), stat = "identity") +
coord_flip() +
scale_fill_brewer(palette = "Set1")
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(subset(m_pyr1,population = "AS"), stat = "identity") +
geom_bar(subset(m_pyr1,population = "AR"), stat = "identity") +
coord_flip() +
scale_fill_brewer(palette = "Set1")
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(subset(m_pyr1,population = "AS"), stat = "identity")
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(stat = "identity")
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(stat = "identity") + scale_y_continuous(breaks = seq(-15000000, 15000000, 5000000),
labels = paste0(as.character(c(seq(15, 0, -5), seq(5, 15, 5))), "m"))
head(m_pyr1)
m_pyr1[1:100,"value"]
m_pyr1[1:1000,"value"]
head(X$AR)
is.na(X$AR_p)
which(is.na(X$AR_p))
which(is.na(X$AR))
head(mAR)
tail(mAR)
m_mAR <- melt(mAR,id.vars = c("time","population"))
tail(m_mAR)
m_mAR$value <- -m_mAR$value # flip for axis
tail(m_mAR)
m_pyr <- rbind(m_mAR,m_mAS)
tail(m_pyr)
head(m_pyr)
(m_pyr[431,])
(m_pyr[4310,])
(m_pyr[43100,])
(m_pyr[43100:43105,])
m_pyr1<-m_pyr[which(m_pyr$time == 2),]
m_pyr1
head(mAR)
m_pyr1<-m_pyr[which(m_pyr$time == 5),]
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(stat = "identity")
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(stat = "identity") + coord_flip()
tail(X$AS)
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(stat = "identity") + coord_flip() +
scale_y_continuous(breaks = seq(-10,10,1))
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(stat = "identity") + coord_flip() +
scale_y_continuous(breaks = seq(-1,1,0.1))
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(stat = "identity") + coord_flip() +
scale_y_continuous(breaks = seq(-1,1,0.1)) + scale_y_continuous(breaks = seq(0,100,20))
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(stat = "identity") + coord_flip() +
scale_y_continuous(breaks = seq(-1,1,0.1)) + scale_x_continuous(breaks = seq(0,100,20))
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(stat = "identity") + coord_flip() +
scale_y_continuous(breaks = seq(-1,1,0.1)) + scale_x_discrete(breaks = seq(0,100,20))
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(stat = "identity") + coord_flip() +
scale_y_continuous(breaks = seq(-1,1,0.1)) + scale_x_discrete("Age",breaks = seq(0,100,10))
ggplot(m_pyr1, aes(x = variable, y = value, fill = population)) +
geom_bar(stat = "identity") + coord_flip() +
scale_y_continuous("Population size",breaks = seq(-1,1,0.1)) + scale_x_discrete("Age",breaks = seq(0,100,10))
steps
m_pyr1<-m_pyr[which(m_pyr$time == steps),]
m_pyr2<-m_pyr[which(m_pyr$time == steps),]
ggplot(m_pyr2, aes(x = variable, y = value, fill = population)) +
geom_bar(stat = "identity") + coord_flip() +
scale_y_continuous("Population size",breaks = seq(-1,1,0.1)) + scale_x_discrete("Age",breaks = seq(0,100,10))
ggplot(m_pyr2, aes(x = variable, y = value, fill = population)) +
geom_bar(stat = "identity") + coord_flip() +
scale_y_continuous("Population size",breaks = seq(-1,2,0.1)) + scale_x_discrete("Age",breaks = seq(0,100,10))
### RUN_MDR model
# Libraries
library(ggplot2)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
library(reshape2)
theme_set(theme_bw())
library(plyr)
# home
home <- "~/Dropbox/MRC SD Fellowship/Research/MDR/Latent MDR/"
code <- "~/Dropbox/MRC SD Fellowship/Research/MDR/Latent MDR/code/"
# get functions
setwd(code)
source("Nat_Hist_fn.R")
# time step determines treatment matrix - if change have to change parameters.R
dt <- 0.5
source("parameters.R")
# Variable parameters para_v
para_v <-         c(0.0004,    0.3,  0.33)
names(para_v) <- c("beta", "f", "x")
year1 <- 1800
yearend <- 2015
steps <- 1 + (yearend-year1) / dt
X <- nat_hist(para_v, para_s, c(year1, yearend, dt), initial)
head(X$psize_age)
### RUN_MDR model
# Libraries
library(ggplot2)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
library(reshape2)
theme_set(theme_bw())
library(plyr)
# home
home <- "~/Dropbox/MRC SD Fellowship/Research/MDR/Latent MDR/"
code <- "~/Dropbox/MRC SD Fellowship/Research/MDR/Latent MDR/code/"
# get functions
setwd(code)
source("Nat_Hist_fn.R")
# time step determines treatment matrix - if change have to change parameters.R
dt <- 0.5
source("parameters.R")
# Variable parameters para_v
para_v <-         c(0.0004,    0.3,  0.33)
names(para_v) <- c("beta", "f", "x")
year1 <- 1800
yearend <- 2015
steps <- 1 + (yearend-year1) / dt
X <- nat_hist(para_v, para_s, c(year1, yearend, dt), initial)
head(X$psize_age)
X$psize
### RUN_MDR model
# Libraries
library(ggplot2)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
library(reshape2)
theme_set(theme_bw())
library(plyr)
# home
home <- "~/Dropbox/MRC SD Fellowship/Research/MDR/Latent MDR/"
code <- "~/Dropbox/MRC SD Fellowship/Research/MDR/Latent MDR/code/"
# get functions
setwd(code)
source("Nat_Hist_fn.R")
# time step determines treatment matrix - if change have to change parameters.R
dt <- 0.5
source("parameters.R")
# Variable parameters para_v
para_v <-         c(0.0004,    0.3,  0.33)
names(para_v) <- c("beta", "f", "x")
year1 <- 1800
yearend <- 2015
steps <- 1 + (yearend-year1) / dt
X <- nat_hist(para_v, para_s, c(year1, yearend, dt), initial)
X$U[1,]
X$U[1,] + X$LS[1,]
length(X$U[1,] + X$LS[1,])
matrix(0,1,3)
Mnage
### RUN_MDR model
# Libraries
library(ggplot2)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
library(reshape2)
theme_set(theme_bw())
library(plyr)
# home
home <- "~/Dropbox/MRC SD Fellowship/Research/MDR/Latent MDR/"
code <- "~/Dropbox/MRC SD Fellowship/Research/MDR/Latent MDR/code/"
# get functions
setwd(code)
source("Nat_Hist_fn.R")
# time step determines treatment matrix - if change have to change parameters.R
dt <- 0.5
source("parameters.R")
# Variable parameters para_v
para_v <-         c(0.0004,    0.3,  0.33)
names(para_v) <- c("beta", "f", "x")
year1 <- 1800
yearend <- 2015
steps <- 1 + (yearend-year1) / dt
X <- nat_hist(para_v, para_s, c(year1, yearend, dt), initial)
X$psize_age
m_psz_age <- as.data.frame(X$psize_age)
colnames(m_psz_age)<-seq(1:Mnage);
m_psz_age$time <- seq(1:steps)
mpsz_age <- as.data.frame(X$psize_age)
colnames(mpsz_age)<-seq(1:Mnage);
mpsz_age$time <- seq(1:steps)
m_psz_age <- melt(mpsz_age,id.vars = c("time"))
head(m_psz_age)
ggplot(m_psz_age, aes(x = variable, y = value )) + geom_bar(stat = "identity")
dim(m_psz_age)
round(2*steps/3,1)
round(2*steps/3,0)
w<-c(which(m_psz_age == 1),which(m_psz_age == round(steps / 3,0)),which(m_psz_age == round(2*steps/3,0),which(m_psz_age == steps))
ggplot(m_psz_age, aes(x = variable, y = value )) + geom_bar(stat = "identity") + coord_flip() + facet_wrap()
w<-c(which(m_psz_age == 1),which(m_psz_age == round(steps / 3,0)),which(m_psz_age == round(2*steps/3,0)),which(m_psz_age == steps))
w<-c(which(m_psz_age$time == 1),which(m_psz_age$time == round(steps / 3,0)),which(m_psz_age$time == round(2*steps/3,0)),which(m_psz_age$time == steps))
ggplot(m_psz_age[w,], aes(x = variable, y = value )) + geom_bar(stat = "identity") + coord_flip() + facet_wrap()
ggplot(m_psz_age[w,], aes(x = variable, y = value )) + geom_bar(stat = "identity") + coord_flip() + facet_wrap(~time)
w<-c(which(m_psz_age$time == 2),which(m_psz_age$time == round(steps / 3,0)),which(m_psz_age$time == round(2*steps/3,0)),which(m_psz_age$time == steps))
ggplot(m_psz_age[w,], aes(x = variable, y = value )) + geom_bar(stat = "identity") + coord_flip() + facet_wrap(~time)
m
40/1000
700/100000
m[1:10] <- 40/1000; # 40/1000 high from USAID
m[10:40]<- 100/100000; # from US https://www.google.co.uk/imgres?imgurl=https://www.cdc.gov/nchs/images/databriefs/1-50/db26_Fig_2.png&imgrefurl=https://www.cdc.gov/nchs/products/databriefs/db26.htm&h=686&w=960&tbnid=0ZQ2wBdlGuXr1M:&tbnh=150&tbnw=211&usg=___lRLJd8LVdpoKcbwF_EMZRQe9Bo%3D&vet=10ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA..i&docid=0AfpBMnU6MIZFM&client=firefox-b-ab&sa=X&ved=0ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA
m[40:Mnage] <- 6000 / 100000
m[Mnage] <- 1;
plot(m)
plot(seq(1,100,1),m)
mean(m)
1/mean(m)
m[1:10] <- 40/10000; # 40/1000 high from USAID
m[10:40]<- 100/100000; # from US https://www.google.co.uk/imgres?imgurl=https://www.cdc.gov/nchs/images/databriefs/1-50/db26_Fig_2.png&imgrefurl=https://www.cdc.gov/nchs/products/databriefs/db26.htm&h=686&w=960&tbnid=0ZQ2wBdlGuXr1M:&tbnh=150&tbnw=211&usg=___lRLJd8LVdpoKcbwF_EMZRQe9Bo%3D&vet=10ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA..i&docid=0AfpBMnU6MIZFM&client=firefox-b-ab&sa=X&ved=0ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA
m[40:Mnage] <- 6000 / 100000
m[Mnage] <- 1;
plot(seq(1,100,1),m)
plot(seq(1,99,1),m[,1:(Mnage-1)])
1/mean(m) # want to be 80
m[1:10] <- 40/10000; # 40/1000 high from USAID
m[10:40]<- 100/100000; # from US https://www.google.co.uk/imgres?imgurl=https://www.cdc.gov/nchs/images/databriefs/1-50/db26_Fig_2.png&imgrefurl=https://www.cdc.gov/nchs/products/databriefs/db26.htm&h=686&w=960&tbnid=0ZQ2wBdlGuXr1M:&tbnh=150&tbnw=211&usg=___lRLJd8LVdpoKcbwF_EMZRQe9Bo%3D&vet=10ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA..i&docid=0AfpBMnU6MIZFM&client=firefox-b-ab&sa=X&ved=0ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA
m[40:Mnage] <- 5000 / 100000
m[Mnage] <- 1;
plot(seq(1,99,1),m[,1:(Mnage-1)])
1/mean(m) # want to be 80
m[1:10] <- 40/10000; # 40/1000 high from USAID
m[10:40]<- 100/100000; # from US https://www.google.co.uk/imgres?imgurl=https://www.cdc.gov/nchs/images/databriefs/1-50/db26_Fig_2.png&imgrefurl=https://www.cdc.gov/nchs/products/databriefs/db26.htm&h=686&w=960&tbnid=0ZQ2wBdlGuXr1M:&tbnh=150&tbnw=211&usg=___lRLJd8LVdpoKcbwF_EMZRQe9Bo%3D&vet=10ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA..i&docid=0AfpBMnU6MIZFM&client=firefox-b-ab&sa=X&ved=0ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA
m[40:Mnage] <- 3000 / 100000
m[Mnage] <- 1;
plot(seq(1,99,1),m[,1:(Mnage-1)])
1/mean(m) # want to be 80
m[1:10] <- 40/10000; # 40/1000 high from USAID
m[10:40]<- 100/100000; # from US https://www.google.co.uk/imgres?imgurl=https://www.cdc.gov/nchs/images/databriefs/1-50/db26_Fig_2.png&imgrefurl=https://www.cdc.gov/nchs/products/databriefs/db26.htm&h=686&w=960&tbnid=0ZQ2wBdlGuXr1M:&tbnh=150&tbnw=211&usg=___lRLJd8LVdpoKcbwF_EMZRQe9Bo%3D&vet=10ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA..i&docid=0AfpBMnU6MIZFM&client=firefox-b-ab&sa=X&ved=0ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA
m[40:Mnage] <- 2000 / 100000
m[Mnage] <- 1;
plot(seq(1,99,1),m[,1:(Mnage-1)])
1/mean(m) # want to be 80
m[1:10] <- 40/10000; # 40/1000 high from USAID
m[10:40]<- 50/100000; # from US https://www.google.co.uk/imgres?imgurl=https://www.cdc.gov/nchs/images/databriefs/1-50/db26_Fig_2.png&imgrefurl=https://www.cdc.gov/nchs/products/databriefs/db26.htm&h=686&w=960&tbnid=0ZQ2wBdlGuXr1M:&tbnh=150&tbnw=211&usg=___lRLJd8LVdpoKcbwF_EMZRQe9Bo%3D&vet=10ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA..i&docid=0AfpBMnU6MIZFM&client=firefox-b-ab&sa=X&ved=0ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA
m[40:Mnage] <- 2000 / 100000
m[Mnage] <- 1;
plot(seq(1,99,1),m[,1:(Mnage-1)])
1/mean(m) # want to be 80
m[1:10] <- 400/100000; # 40/1000 high from USAID
m[10:40]<- 30/100000; # from US https://www.google.co.uk/imgres?imgurl=https://www.cdc.gov/nchs/images/databriefs/1-50/db26_Fig_2.png&imgrefurl=https://www.cdc.gov/nchs/products/databriefs/db26.htm&h=686&w=960&tbnid=0ZQ2wBdlGuXr1M:&tbnh=150&tbnw=211&usg=___lRLJd8LVdpoKcbwF_EMZRQe9Bo%3D&vet=10ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA..i&docid=0AfpBMnU6MIZFM&client=firefox-b-ab&sa=X&ved=0ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA
m[40:Mnage] <- 2000 / 100000
m[Mnage] <- 1;
plot(seq(1,99,1),m[,1:(Mnage-1)])
1/mean(m) # want to be 80
m[1:10] <- 400/100000; # 40/1000 high from USAID
m[10:40]<- 30/100000; # from US https://www.google.co.uk/imgres?imgurl=https://www.cdc.gov/nchs/images/databriefs/1-50/db26_Fig_2.png&imgrefurl=https://www.cdc.gov/nchs/products/databriefs/db26.htm&h=686&w=960&tbnid=0ZQ2wBdlGuXr1M:&tbnh=150&tbnw=211&usg=___lRLJd8LVdpoKcbwF_EMZRQe9Bo%3D&vet=10ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA..i&docid=0AfpBMnU6MIZFM&client=firefox-b-ab&sa=X&ved=0ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA
m[40:Mnage] <- 1000 / 100000
m[Mnage] <- 1;
plot(seq(1,99,1),m[,1:(Mnage-1)])
1/mean(m) # want to be 80
m[1:10] <- 400/100000; # 40/1000 high from USAID
m[10:40]<- 30/100000; # from US https://www.google.co.uk/imgres?imgurl=https://www.cdc.gov/nchs/images/databriefs/1-50/db26_Fig_2.png&imgrefurl=https://www.cdc.gov/nchs/products/databriefs/db26.htm&h=686&w=960&tbnid=0ZQ2wBdlGuXr1M:&tbnh=150&tbnw=211&usg=___lRLJd8LVdpoKcbwF_EMZRQe9Bo%3D&vet=10ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA..i&docid=0AfpBMnU6MIZFM&client=firefox-b-ab&sa=X&ved=0ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA
m[40:Mnage] <- 500 / 100000
m[Mnage] <- 1;
plot(seq(1,99,1),m[,1:(Mnage-1)])
1/mean(m) # want to be 80
m[1:10] <- 400/100000; # 40/1000 high from USAID
m[10:40]<- 30/100000; # from US https://www.google.co.uk/imgres?imgurl=https://www.cdc.gov/nchs/images/databriefs/1-50/db26_Fig_2.png&imgrefurl=https://www.cdc.gov/nchs/products/databriefs/db26.htm&h=686&w=960&tbnid=0ZQ2wBdlGuXr1M:&tbnh=150&tbnw=211&usg=___lRLJd8LVdpoKcbwF_EMZRQe9Bo%3D&vet=10ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA..i&docid=0AfpBMnU6MIZFM&client=firefox-b-ab&sa=X&ved=0ahUKEwih2a7CtM_XAhUrCsAKHeQuBZ8Q9QEILDAA
m[40:Mnage] <- 450 / 100000
m[Mnage] <- 1;
plot(seq(1,99,1),m[,1:(Mnage-1)])
1/mean(m) # want to be 80
### RUN_MDR model
# Libraries
library(ggplot2)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
library(reshape2)
theme_set(theme_bw())
library(plyr)
# home
home <- "~/Dropbox/MRC SD Fellowship/Research/MDR/Latent MDR/"
code <- "~/Dropbox/MRC SD Fellowship/Research/MDR/Latent MDR/code/"
# get functions
setwd(code)
source("Nat_Hist_fn.R")
# time step determines treatment matrix - if change have to change parameters.R
dt <- 0.5
source("parameters.R")
# Variable parameters para_v
para_v <-         c(0.0004,    0.3,  0.33)
names(para_v) <- c("beta", "f", "x")
year1 <- 1800
yearend <- 2015
steps <- 1 + (yearend-year1) / dt
X <- nat_hist(para_v, para_s, c(year1, yearend, dt), initial)
mpsz_age <- as.data.frame(X$psize_age)
colnames(mpsz_age)<-seq(1:Mnage);
mpsz_age$time <- seq(1:steps)
m_psz_age <- melt(mpsz_age,id.vars = c("time"))
w<-c(which(m_psz_age$time == 2),which(m_psz_age$time == round(steps / 3,0)),which(m_psz_age$time == round(2*steps/3,0)),which(m_psz_age$time == steps))
ggplot(m_psz_age[w,], aes(x = variable, y = value )) + geom_bar(stat = "identity") + coord_flip() + facet_wrap(~time)
par(mfrow=c(2,2))
plot(seq(1:steps),X$psize, type = "l")
if(max(X$inc[2,]) > max(X$inc[1,])){
plot (seq(1:steps),X$inc[2,],type = "l", col ="red")
lines(seq(1:steps),X$inc[1,], col = "blue")
} else {plot (seq(1:steps),X$inc[1,],type = "l", col ="red")
lines(seq(1:steps),X$inc[2,], col = "blue")}
if(max(X$prev[2,]) > max(X$prev[1,])){
plot (seq(1:steps),X$prev[2,],type = "l", col ="red")
lines(seq(1:steps),X$prev[1,], col = "blue")
} else {plot (seq(1:steps),X$prev[1,],type = "l", col ="red")
lines(seq(1:steps),X$prev[2,], col = "blue")}
plot (seq(1:steps),X$ratio_mdr,type = "l")
X$ratio_mdr
### RUN_MDR model
# Libraries
library(ggplot2)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
library(reshape2)
theme_set(theme_bw())
library(plyr)
# home
home <- "~/Dropbox/MRC SD Fellowship/Research/MDR/Latent MDR/"
code <- "~/Dropbox/MRC SD Fellowship/Research/MDR/Latent MDR/code/"
# get functions
setwd(code)
source("Nat_Hist_fn.R")
# time step determines treatment matrix - if change have to change parameters.R
dt <- 0.5
source("parameters.R")
# Variable parameters para_v
para_v <-         c(0.0004,    0.3,  0.33)
names(para_v) <- c("beta", "f", "x")
year1 <- 1800
yearend <- 2015
steps <- 1 + (yearend-year1) / dt
X <- nat_hist(para_v, para_s, c(year1, yearend, dt), initial)
### RUN_MDR model
# Libraries
library(ggplot2)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
library(reshape2)
theme_set(theme_bw())
library(plyr)
# home
home <- "~/Dropbox/MRC SD Fellowship/Research/MDR/Latent MDR/"
code <- "~/Dropbox/MRC SD Fellowship/Research/MDR/Latent MDR/code/"
# get functions
setwd(code)
source("Nat_Hist_fn.R")
# time step determines treatment matrix - if change have to change parameters.R
dt <- 0.5
source("parameters.R")
# Variable parameters para_v
para_v <-         c(0.0004,    0.3,  0.33)
names(para_v) <- c("beta", "f", "x")
year1 <- 1800
yearend <- 2015
steps <- 1 + (yearend-year1) / dt
X <- nat_hist(para_v, para_s, c(year1, yearend, dt), initial)
summ_row <- as.data.frame(rbind(rowSums(X$U),rowSums(X$LS),rowSums(X$LR),rowSums(X$AS),rowSums(X$AR),rowSums(X$TR),rowSums(X$TS),
rowSums(X$LS_p),rowSums(X$LR_p),rowSums(X$AS_p),rowSums(X$AR_p),rowSums(X$TR_p),rowSums(X$TS_p)))
colnames(summ_row)<-seq(1:steps);
summ_row$pop<-c("U","LS","LR","AS","AR","TR","TS","LS_p","LR_p","AS_p","AR_p","TR_p","TS_p")
m_summ_row <- melt(summ_row[-1,],id.var = "pop")
par(mfrow=c(2,2))
plot(seq(1:steps),X$psize, type = "l")
if(max(X$inc[2,]) > max(X$inc[1,])){
plot (seq(1:steps),X$inc[2,],type = "l", col ="red")
lines(seq(1:steps),X$inc[1,], col = "blue")
} else {plot (seq(1:steps),X$inc[1,],type = "l", col ="red")
lines(seq(1:steps),X$inc[2,], col = "blue")}
if(max(X$prev[2,]) > max(X$prev[1,])){
plot (seq(1:steps),X$prev[2,],type = "l", col ="red")
lines(seq(1:steps),X$prev[1,], col = "blue")
} else {plot (seq(1:steps),X$prev[1,],type = "l", col ="red")
lines(seq(1:steps),X$prev[2,], col = "blue")}
plot (seq(1:steps),X$ratio_mdr,type = "l")
### RUN_MDR model
# Libraries
library(ggplot2)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
library(reshape2)
theme_set(theme_bw())
library(plyr)
# home
home <- "~/Dropbox/MRC SD Fellowship/Research/MDR/Latent MDR/"
code <- "~/Dropbox/MRC SD Fellowship/Research/MDR/Latent MDR/code/"
# get functions
setwd(code)
source("Nat_Hist_fn.R")
# time step determines treatment matrix - if change have to change parameters.R
dt <- 0.5
source("parameters.R")
# Variable parameters para_v
para_v <-         c(0.0004,    0.3,  0.33)
names(para_v) <- c("beta", "f", "x")
year1 <- 1800
yearend <- 2015
steps <- 1 + (yearend-year1) / dt
X <- nat_hist(para_v, para_s, c(year1, yearend, dt), initial)
par(mfrow=c(2,2))
plot(seq(1:steps),X$psize, type = "l")
if(max(X$inc[2,]) > max(X$inc[1,])){
plot (seq(1:steps),X$inc[2,],type = "l", col ="red")
lines(seq(1:steps),X$inc[1,], col = "blue")
} else {plot (seq(1:steps),X$inc[1,],type = "l", col ="red")
lines(seq(1:steps),X$inc[2,], col = "blue")}
if(max(X$prev[2,]) > max(X$prev[1,])){
plot (seq(1:steps),X$prev[2,],type = "l", col ="red")
lines(seq(1:steps),X$prev[1,], col = "blue")
} else {plot (seq(1:steps),X$prev[1,],type = "l", col ="red")
lines(seq(1:steps),X$prev[2,], col = "blue")}
plot (seq(1:steps),X$ratio_mdr,type = "l")
p_summ_row <- summ_row
plot (seq(1:steps),X$ratio_mdr,type = "l", ylab = "Perc new TB cases that are MDR")
plot (seq(1:steps),X$ratio_mdr,type = "l", ylab = "Perc new TB cases\nthat are MDR")
plot (seq(1:steps),X$ratio_mdr,type = "l", ylab = "Perc new TB = MDR")
p_summ_row <- summ_row
for(ii in 1:length(X$psize)){p_summ_row[,ii]<-p_summ_row[,ii]/X$psize[ii]}
m_p_summ_row<-melt(p_summ_row,id.vars = "pop")
ggplot(m_p_summ_row,aes(x = variable, y = value,fill=pop)) + geom_bar(stat="identity")
head(summ_row)
w<-c(which(summ_row$pop == "LS"), which(summ_row$pop == "LR"), which(summ_row$pop == "LS_p"), which(summ_row$pop == "LR_p"))
plot( seq(1:steps), colSums(summ_row[w,])/psize, type="l")
colSums(summ_row[w,])
w
plot( seq(1:steps), colSums(summ_row[w,1:steps])/psize, type="l")
plot( seq(1:steps), colSums(summ_row[w,1:steps])/X$psize, type="l")
w<-c(which(summ_row$pop == "LS"), which(summ_row$pop == "LR"), which(summ_row$pop == "LS_p"), which(summ_row$pop == "LR_p"))
plot( seq(1:steps), 100*colSums(summ_row[w,1:steps])/X$psize, type="l")
w<-c(which(summ_row$pop == "LS"), which(summ_row$pop == "LR"), which(summ_row$pop == "LS_p"), which(summ_row$pop == "LR_p"))
plot( seq(1:steps), 100*colSums(summ_row[w,1:steps])/X$psize, type="l", ylab = "Perc. latently infected")
